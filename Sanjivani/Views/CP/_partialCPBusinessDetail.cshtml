@model SanjivaniModalView.BusinessDetails
@using (Html.BeginForm("_partialSetCPBusinessDetail", "CP", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()
    <div class="box box-danger" id="loading-example">
        <div class="box-header" style="cursor: move;background-color: steelblue;cursor: move;color: white;">
            <!-- tools box -->
            <div class="pull-right box-tools">

                @*<button class="btn btn-danger btn-sm" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse"><i class="fa fa-minus"></i></button>*@

            </div><!-- /. tools -->
           

            <h3 class="box-title">Business Detail</h3>
        </div><!-- /.box-header -->
        <div class="box-body no-padding" style="background-color: whitesmoke;">
            <div class="row">
                <div class="form-group col-md-3">
                    <label for="exampleInputEmail1">Company Name</label>
                    @Html.EditorFor(model => model.CommanyName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Company Name" } })
                    @Html.ValidationMessageFor(model => model.CommanyName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Company Type</label>
                    @Html.DropDownListFor(model => model.CommanyType, new SelectList(ViewBag.BindCompanyType, "Value", "Text"), "--Select Commany Type--", new { @class = "form-control", })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Company Reg. Number</label>
                    @Html.EditorFor(model => model.RegNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Company Reg. Number" } })
                    @Html.ValidationMessageFor(model => model.RegNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Company GST Reg Number</label>
                    @Html.EditorFor(model => model.GSTRegNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Company GST Reg Number" } })
                    @Html.ValidationMessageFor(model => model.GSTRegNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Company WebSite</label>
                    @Html.EditorFor(model => model.webSite, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Company WebSite" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Line Of Business</label>
                    @Html.EditorFor(model => model.LineofBusiness, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Line Of Business" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Annual Turnover</label>
                    @Html.EditorFor(model => model.Annulturnoveer, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Annual Turnover", onkeypress = "return fnAllowNumeric()" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Contact Person Name </label>
                    @Html.EditorFor(model => model.ContactPersonName, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Contact Person Name", onfocusout = "return Contactname(this);" } })
                </div>

                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Designation</label>
                    @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Designation" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Contact Number</label>
                    @Html.EditorFor(model => model.BContactnumber, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Contact Number", onkeypress = "return fnAllowNumeric()" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Alternate Contact Number</label>
                    @Html.EditorFor(model => model.ABContactnumber, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Alternate Contact Number", onkeypress = "return fnAllowNumeric()" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Email Id </label>
                    @Html.EditorFor(model => model.Emailid, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Email Id", onfocusout = "validateBusnessEmail();" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Current ERP</label>
                    @Html.EditorFor(model => model.ERP, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Current ERP" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Current Hosting Provider</label>
                    @Html.EditorFor(model => model.HostingProvider, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Current Hosting Provider" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Hosting Platfrom</label>
                    @*@Html.EditorFor(model => model.HostingPlatform, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Hosting Platfrom" } })*@
                    @Html.DropDownListFor(model => model.HostingPlatform, new SelectList(ViewBag.HostingPlatForm, "Value", "Text"), "--Select Hosting Platfrom--", new { @class = "form-control", })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Type of Hosting</label>
                    @*@Html.EditorFor(model => model.TypeofHosting, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Type of Hosting" } })*@
                    @Html.DropDownListFor(model => model.TypeofHosting, new SelectList(ViewBag.TypeOfHosting, "Value", "Text"), "--Select Type of Hosting--", new { @class = "form-control", })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">No.of WebSite Hosted</label>
                    @Html.EditorFor(model => model.NoOfWebSiteHos, new { htmlAttributes = new { @class = "form-control", @Placeholder = "No.of WebSite Hosted", onkeypress = "return fnAllowNumeric()" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Current Email Provider</label>
                    @Html.EditorFor(model => model.CurrentEmailProvider, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Current Email Provider" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Count Of Emails</label>
                    @Html.EditorFor(model => model.CountofEmail, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Count Of Emails", onkeypress = "return fnAllowNumeric()" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Your Store Front Domain</label>
                    @Html.EditorFor(model => model.CurrentDomainProvide, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Your Store Front Domain" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Count Of Domains</label>
                    @Html.EditorFor(model => model.CurrentDomainCount, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Count Of Domains", onkeypress = "return fnAllowNumeric()" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Count Of SSL Certificate</label>
                    @Html.EditorFor(model => model.SSLCertificateCount, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Count Of SSL Certificate", onkeypress = "return fnAllowNumeric()" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Office Address</label>
                    @Html.EditorFor(model => model.OfficeAddres, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Office Address" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputEmail1">Country</label>
                    @Html.DropDownListFor(model => model.Country,
       Enumerable.Empty<SelectListItem>
           (),
           "Select Country",
           new { @class = "countries order-alpha dropdown form-control", @id = "countryId" })

                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputEmail1">State</label>
                    @Html.DropDownListFor(m => m.State,
               new SelectList(Enumerable.Empty<SelectListItem>
                   (), "StateId", "State"),
                   "Select State",
                   new { @class = "states order-alpha dropdown form-control", @id = "stateId" })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputEmail1">City</label>
                    @Html.DropDownListFor(m => m.City,
       new SelectList(Enumerable.Empty<SelectListItem>
           (), "StateId", "State"),
           "Select City",
           new { @class = "cities order-alpha dropdown form-control", @id = "cityId" })
                </div>
            </div><!-- /.row - inside box -->
        </div><!-- /.box-body -->

    </div>
    <div style="text-align: center;"><button type="submit" class="btn btn-primary"><i class="fa fa-mail-forward"></i> Next</button></div>
}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
<script type="text/javascript">
    function Contactname() {
        debugger;
        var name = $('#ContactPersonName').val();
        if (name != '') {
            if (!cek.test(name)) {

                $('#ContactPersonName').focus();
                alert("Only Alphabetic");
                $('#ContactPersonName').val('');
                return false;
            }
            return true;
        }

    }

    function validateBusnessEmail() {

        debugger;
        var EmailId = $('#EmailID').val();
        if (EmailId != '')
        {

            var email = document.getElementById("EmailID").value;


            var reg = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
            if (reg.test(email)) {

            }
            else {

                $("#EmailID").val('');
                $("#EmailID").focus();
                alert('Please Enter Valid Email');
                // $("#msg").show();
                //document.getElementById("span").innerHTML = "Please Enter Valid Email";
            }
        }

    }
</script>